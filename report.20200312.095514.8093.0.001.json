
{
  "header": {
    "reportVersion": 1,
    "event": "Allocation failed - JavaScript heap out of memory",
    "trigger": "FatalError",
    "filename": "report.20200312.095514.8093.0.001.json",
    "dumpEventTime": "2020-03-12T09:55:14Z",
    "dumpEventTimeStamp": "1584006914544",
    "processId": 8093,
    "cwd": "/home/vsonline/workspace/js/jsArray",
    "commandLine": [
      "node",
      "main.js"
    ],
    "nodejsVersion": "v12.14.0",
    "glibcVersionRuntime": "2.24",
    "glibcVersionCompiler": "2.17",
    "wordSize": 64,
    "arch": "x64",
    "platform": "linux",
    "componentVersions": {
      "node": "12.14.0",
      "v8": "7.7.299.13-node.16",
      "uv": "1.33.1",
      "zlib": "1.2.11",
      "brotli": "1.0.7",
      "ares": "1.15.0",
      "modules": "72",
      "nghttp2": "1.39.2",
      "napi": "5",
      "llhttp": "1.1.4",
      "http_parser": "2.8.0",
      "openssl": "1.1.1d",
      "cldr": "35.1",
      "icu": "64.2",
      "tz": "2019c",
      "unicode": "12.1"
    },
    "release": {
      "name": "node",
      "lts": "Erbium",
      "headersUrl": "https://nodejs.org/download/release/v12.14.0/node-v12.14.0-headers.tar.gz",
      "sourceUrl": "https://nodejs.org/download/release/v12.14.0/node-v12.14.0.tar.gz"
    },
    "osName": "Linux",
    "osRelease": "5.0.0-1032-azure",
    "osVersion": "#34-Ubuntu SMP Mon Feb 10 19:37:25 UTC 2020",
    "osMachine": "x86_64",
    "cpus": [
      {
        "model": "Intel(R) Xeon(R) Platinum 8168 CPU @ 2.70GHz",
        "speed": 2693,
        "user": 1687900,
        "nice": 900,
        "sys": 970000,
        "idle": 343870400,
        "irq": 0
      },
      {
        "model": "Intel(R) Xeon(R) Platinum 8168 CPU @ 2.70GHz",
        "speed": 2693,
        "user": 1422900,
        "nice": 12800,
        "sys": 908500,
        "idle": 349985600,
        "irq": 0
      },
      {
        "model": "Intel(R) Xeon(R) Platinum 8168 CPU @ 2.70GHz",
        "speed": 2693,
        "user": 1681500,
        "nice": 12000,
        "sys": 1002000,
        "idle": 346958200,
        "irq": 0
      },
      {
        "model": "Intel(R) Xeon(R) Platinum 8168 CPU @ 2.70GHz",
        "speed": 2693,
        "user": 1474200,
        "nice": 18000,
        "sys": 922600,
        "idle": 349637600,
        "irq": 0
      }
    ],
    "networkInterfaces": [
      {
        "name": "lo",
        "internal": true,
        "mac": "00:00:00:00:00:00",
        "address": "127.0.0.1",
        "netmask": "255.0.0.0",
        "family": "IPv4"
      },
      {
        "name": "eth0",
        "internal": false,
        "mac": "02:42:ac:11:00:02",
        "address": "172.17.0.2",
        "netmask": "255.255.0.0",
        "family": "IPv4"
      }
    ],
    "host": "487af25c9710"
  },
  "javascriptStack": {
    "message": "No stack.",
    "stack": [
      "Unavailable."
    ]
  },
  "nativeStack": [
    {
      "pc": "0x0000000000b04935",
      "symbol": "report::TriggerNodeReport(v8::Isolate*, node::Environment*, char const*, char const*, std::string const&, v8::Local<v8::String>) [node]"
    },
    {
      "pc": "0x00000000009db9e3",
      "symbol": "node::OnFatalError(char const*, char const*) [node]"
    },
    {
      "pc": "0x0000000000b39f1e",
      "symbol": "v8::Utils::ReportOOMFailure(v8::internal::Isolate*, char const*, bool) [node]"
    },
    {
      "pc": "0x0000000000b3a299",
      "symbol": "v8::internal::V8::FatalProcessOutOfMemory(v8::internal::Isolate*, char const*, bool) [node]"
    },
    {
      "pc": "0x0000000000ce5635",
      "symbol": " [node]"
    },
    {
      "pc": "0x0000000000cbca60",
      "symbol": "v8::internal::Factory::NewUninitializedFixedArray(int, v8::internal::AllocationType) [node]"
    },
    {
      "pc": "0x0000000000e26aa1",
      "symbol": " [node]"
    },
    {
      "pc": "0x0000000000e26d50",
      "symbol": " [node]"
    },
    {
      "pc": "0x0000000000fc8ffb",
      "symbol": "v8::internal::Runtime_GrowArrayElements(int, unsigned long*, v8::internal::Isolate*) [node]"
    },
    {
      "pc": "0x0000000001374fd9",
      "symbol": " [node]"
    }
  ],
  "javascriptHeap": {
    "totalMemory": 2877276160,
    "totalCommittedMemory": 2844482088,
    "usedMemory": 2841802816,
    "availableMemory": 16989384,
    "memoryLimit": 2197815296,
    "heapSpaces": {
      "read_only_space": {
        "memorySize": 262144,
        "committedMemory": 32568,
        "capacity": 261872,
        "used": 32296,
        "available": 229576
      },
      "new_space": {
        "memorySize": 33554432,
        "committedMemory": 2079776,
        "capacity": 16759808,
        "used": 0,
        "available": 16759808
      },
      "old_space": {
        "memorySize": 2469888,
        "committedMemory": 1872032,
        "capacity": 1440272,
        "used": 1440272,
        "available": 0
      },
      "code_space": {
        "memorySize": 425984,
        "committedMemory": 177728,
        "capacity": 157792,
        "used": 157792,
        "available": 0
      },
      "map_space": {
        "memorySize": 528384,
        "committedMemory": 284656,
        "capacity": 204640,
        "used": 204640,
        "available": 0
      },
      "large_object_space": {
        "memorySize": 1888440320,
        "committedMemory": 1888440320,
        "capacity": 1888419392,
        "used": 1888419392,
        "available": 0
      },
      "code_large_object_space": {
        "memorySize": 49152,
        "committedMemory": 49152,
        "capacity": 3552,
        "used": 3552,
        "available": 0
      },
      "new_large_object_space": {
        "memorySize": 951545856,
        "committedMemory": 951545856,
        "capacity": 951544872,
        "used": 951544872,
        "available": 0
      }
    }
  },
  "resourceUsage": {
    "userCpuSeconds": 2.16303,
    "kernelCpuSeconds": 0.512717,
    "cpuConsumptionPercent": 133.787,
    "maxRss": 2874458112,
    "pageFaults": {
      "IORequired": 0,
      "IONotRequired": 10418
    },
    "fsActivity": {
      "reads": 0,
      "writes": 8
    }
  },
  "uvthreadResourceUsage": {
    "userCpuSeconds": 1.92293,
    "kernelCpuSeconds": 0.511716,
    "cpuConsumptionPercent": 121.733,
    "fsActivity": {
      "reads": 0,
      "writes": 8
    }
  },
  "libuv": [
  ],
  "environmentVariables": {
    "NVM_DIR": "/home/vsonline/.nvm",
    "LS_COLORS": "rs=0:di=01;34:ln=01;36:mh=00:pi=40;33:so=01;35:do=01;35:bd=40;33;01:cd=40;33;01:or=40;31;01:mi=00:su=37;41:sg=30;43:ca=30;41:tw=30;42:ow=34;42:st=37;44:ex=01;32:*.tar=01;31:*.tgz=01;31:*.arc=01;31:*.arj=01;31:*.taz=01;31:*.lha=01;31:*.lz4=01;31:*.lzh=01;31:*.lzma=01;31:*.tlz=01;31:*.txz=01;31:*.tzo=01;31:*.t7z=01;31:*.zip=01;31:*.z=01;31:*.Z=01;31:*.dz=01;31:*.gz=01;31:*.lrz=01;31:*.lz=01;31:*.lzo=01;31:*.xz=01;31:*.zst=01;31:*.tzst=01;31:*.bz2=01;31:*.bz=01;31:*.tbz=01;31:*.tbz2=01;31:*.tz=01;31:*.deb=01;31:*.rpm=01;31:*.jar=01;31:*.war=01;31:*.ear=01;31:*.sar=01;31:*.rar=01;31:*.alz=01;31:*.ace=01;31:*.zoo=01;31:*.cpio=01;31:*.7z=01;31:*.rz=01;31:*.cab=01;31:*.jpg=01;35:*.jpeg=01;35:*.mjpg=01;35:*.mjpeg=01;35:*.gif=01;35:*.bmp=01;35:*.pbm=01;35:*.pgm=01;35:*.ppm=01;35:*.tga=01;35:*.xbm=01;35:*.xpm=01;35:*.tif=01;35:*.tiff=01;35:*.png=01;35:*.svg=01;35:*.svgz=01;35:*.mng=01;35:*.pcx=01;35:*.mov=01;35:*.mpg=01;35:*.mpeg=01;35:*.m2v=01;35:*.mkv=01;35:*.webm=01;35:*.ogm=01;35:*.mp4=01;35:*.m4v=01;35:*.mp4v=01;35:*.vob=01;35:*.qt=01;35:*.nuv=01;35:*.wmv=01;35:*.asf=01;35:*.rm=01;35:*.rmvb=01;35:*.flc=01;35:*.avi=01;35:*.fli=01;35:*.flv=01;35:*.gl=01;35:*.dl=01;35:*.xcf=01;35:*.xwd=01;35:*.yuv=01;35:*.cgm=01;35:*.emf=01;35:*.ogv=01;35:*.ogx=01;35:*.aac=00;36:*.au=00;36:*.flac=00;36:*.m4a=00;36:*.mid=00;36:*.midi=00;36:*.mka=00;36:*.mp3=00;36:*.mpc=00;36:*.ogg=00;36:*.ra=00;36:*.wav=00;36:*.oga=00;36:*.opus=00;36:*.spx=00;36:*.xspf=00;36:",
    "LANG": "C.UTF-8",
    "HOSTNAME": "487af25c9710",
    "AMD_ENTRYPOINT": "vs/server/remoteExtensionHostProcess",
    "NVS_USE_XZ": "1",
    "COLORTERM": "truecolor",
    "NVM_CD_FLAGS": "",
    "PYTHONIOENCODING": "UTF-8",
    "DOTNET_SKIP_FIRST_TIME_EXPERIENCE": "1",
    "NUGET_XMLDOC_MODE": "skip",
    "ORYX_ENV_TYPE": "vsonline-3453253",
    "PWD": "/home/vsonline/workspace/js/jsArray",
    "HOME": "/home/vsonline",
    "TERM_PROGRAM": "vscode",
    "TERM_PROGRAM_VERSION": "1.42.1",
    "NVS_HOME": "/home/vsonline/.nvs",
    "VSCODE_IPC_HOOK_CLI": "/tmp/vscode-ipc-1d623bca-b014-4713-ac49-433b622a101e.sock",
    "NVM_RC_VERSION": "",
    "TERM": "xterm-256color",
    "SHELL": "/bin/bash",
    "NVS_OS": "linux",
    "SHLVL": "3",
    "ORYX_AI_INSTRUMENTATION_KEY": "4aadba6b-30c8-42db-9b93-024d5c62b887",
    "NVS_ROOT": "/home/vsonline/.nvs",
    "VSONLINE_BUILD": "3453253",
    "PIPE_LOGGING": "true",
    "PATH": "/home/vsonline/.dotnet:/home/vsonline/.dotnet:/home/vsonline/.vscode-remote/bin/c47d83b293181d9be64f27ff093689e8e7aed054/bin:/home/vsonline/.dotnet:/home/vsonline/.dotnet:/usr/local/bin:/usr/bin:/bin:/usr/local/games:/usr/games:/opt/oryx:/opt/nodejs/lts/bin:/opt/python/latest/bin:/opt/yarn/stable/bin:/home/vsonline/.local/bin:/home/vsonline/.npm-global/bin:/opt/oryx:/opt/nodejs/lts/bin:/opt/python/latest/bin:/opt/yarn/stable/bin:/home/vsonline/.local/bin:/home/vsonline/.npm-global/bin:/opt/oryx:/opt/nodejs/lts/bin:/opt/python/latest/bin:/opt/yarn/stable/bin:/home/vsonline/.local/bin:/home/vsonline/.npm-global/bin:/opt/oryx:/opt/nodejs/lts/bin:/opt/python/latest/bin:/opt/yarn/stable/bin:/home/vsonline/.local/bin:/home/vsonline/.npm-global/bin",
    "NUGET_PACKAGES": "/var/nuget",
    "VERBOSE_LOGGING": "true",
    "BASH_FUNC_nvsudo%%": "() {  local NVS_CURRENT=`nvs which`;\n if [ -n \"${NVS_CURRENT}\" ]; then\n NVS_CURRENT=`dirname \"${NVS_CURRENT}\"`;\n fi;\n sudo \"NVS_CURRENT=${NVS_CURRENT}\" \"${NVS_ROOT}/nvs\" $*\n}",
    "BASH_FUNC_nvs%%": "() {  if [ -z \"${NVS_HOME}\" ]; then\n export NVS_HOME=\"${NVS_ROOT}\";\n fi;\n export NVS_POSTSCRIPT=\"${NVS_HOME}/nvs_tmp_$(dd if=/dev/urandom count=1 2> /dev/null | cksum | cut -f1 -d\" \").sh\";\n local NODE_EXE=\"node\";\n if [ \"${NVS_OS}\" = \"win\" ]; then\n NODE_EXE=\"node.exe\";\n fi;\n local NODE_PATH=\"${NVS_HOME}/cache/${NODE_EXE}\";\n if [ ! -f \"${NODE_PATH}\" ]; then\n local NODE_VERSION=\"$(grep '\"bootstrap\" *:' \"${NVS_ROOT}/defaults.json\" | sed -e 's/.*: *\"//' -e 's/\"[^\\n]*//' -e 's/.*\\///')\";\n local NODE_REMOTE=\"$(grep '\"bootstrap\" *:' \"${NVS_ROOT}/defaults.json\" | sed -e 's/.*: *\"//' -e 's/\"[^\\n]*//' -e 's/\\/.*//')\";\n local NODE_BASE_URI=\"$(grep \"\\\"${NODE_REMOTE}\\\" *:\" \"${NVS_ROOT}/defaults.json\" | sed -e 's/.*: *\"//' -e 's/\"[^\\n]*//')\";\n local NODE_ARCHIVE_EXT=\".tar.gz\";\n local TAR_FLAGS=\"-zxvf\";\n if [ \"${NVS_OS}\" = \"win\" ]; then\n NODE_ARCHIVE_EXT=\".7z\";\n else\n if [ \"${NVS_USE_XZ}\" = \"1\" ]; then\n NODE_ARCHIVE_EXT=\".tar.xz\";\n TAR_FLAGS=\"-Jxvf\";\n fi;\n fi;\n local NODE_ARCH=\"$(uname -m | sed 's/x86_64/x64/' | sed 's/i686/x86/' | sed 's/aarch64/arm64/' )\";\n local NODE_FULLNAME=\"node-v${NODE_VERSION}-${NVS_OS}-${NODE_ARCH}\";\n local NODE_URI=\"${NODE_BASE_URI}v${NODE_VERSION}/${NODE_FULLNAME}${NODE_ARCHIVE_EXT}\";\n local NODE_ARCHIVE=\"${NVS_HOME}/cache/${NODE_FULLNAME}${NODE_ARCHIVE_EXT}\";\n if [ ! -d \"${NVS_HOME}/cache\" ]; then\n command mkdir -p \"${NVS_HOME}/cache\";\n fi;\n echo \"Downloading bootstrap node from ${NODE_URI}\";\n if type noglob > /dev/null 2>&1; then\n noglob curl -L -# \"${NODE_URI}\" -o \"${NODE_ARCHIVE}\";\n else\n curl -L -# \"${NODE_URI}\" -o \"${NODE_ARCHIVE}\";\n fi;\n if [ ! -f \"${NODE_ARCHIVE}\" ]; then\n echo \"Failed to download node binary.\";\n return 1;\n fi;\n if [ \"${NVS_OS}\" = \"win\" ]; then\n \"${NVS_ROOT}/tools/7-Zip/7zr.exe\" e \"-o${NVS_HOME}/cache\" -y \"${NODE_ARCHIVE}\" \"${NODE_FULLNAME}/${NODE_EXE}\" > /dev/null 2>&1;\n else\n tar $TAR_FLAGS \"${NODE_ARCHIVE}\" -C \"${NVS_HOME}/cache\" \"${NODE_FULLNAME}/bin/${NODE_EXE}\" > /dev/null 2>&1;\n mv \"${NVS_HOME}/cache/${NODE_FULLNAME}/bin/${NODE_EXE}\" \"${NVS_HOME}/cache/${NODE_EXE}\" > /dev/null 2>&1;\n rm -r \"${NVS_HOME}/cache/${NODE_FULLNAME}\" > /dev/null 2>&1;\n fi;\n if [ ! -f \"${NODE_PATH}\" ]; then\n echo \"Failed to setup node binary.\";\n return 1;\n fi;\n echo \"\";\n fi;\n local EXIT_CODE=0;\n case \"$@\" in \n \"cd\")\n local DIR=$PWD;\n while [ \"$DIR\" != \"\" -a ! \\( -e \"$DIR/.node-version\" -o -e \"$DIR/.nvmrc\" \\) ]; do\n if [ \"$DIR\" = \"/\" ]; then\n DIR=;\n else\n DIR=$(dirname \"$DIR\");\n fi;\n done;\n if [ \"$DIR\" != \"$NVS_AUTO_DIRECTORY\" ]; then\n command \"${NODE_PATH}\" \"${NVS_ROOT}/lib/index.js\" auto;\n EXIT_CODE=$?;\n fi;\n export NVS_AUTO_DIRECTORY=$DIR\n ;;\n *)\n command \"${NODE_PATH}\" \"${NVS_ROOT}/lib/index.js\" \"$@\";\n EXIT_CODE=$?\n ;;\n esac;\n if [ ${EXIT_CODE} = 2 ]; then\n rm \"${NODE_PATH}\";\n nvs $@;\n fi;\n if [ -f \"${NVS_POSTSCRIPT}\" ]; then\n . \"${NVS_POSTSCRIPT}\";\n rm \"${NVS_POSTSCRIPT}\";\n unset NVS_POSTSCRIPT;\n fi;\n return $EXIT_CODE\n}",
    "_": "/opt/nodejs/lts/bin/node",
    "OLDPWD": "/home/vsonline/workspace/js"
  },
  "userLimits": {
    "core_file_size_blocks": {
      "soft": "unlimited",
      "hard": "unlimited"
    },
    "data_seg_size_kbytes": {
      "soft": "unlimited",
      "hard": "unlimited"
    },
    "file_size_blocks": {
      "soft": "unlimited",
      "hard": "unlimited"
    },
    "max_locked_memory_bytes": {
      "soft": 16777216,
      "hard": 16777216
    },
    "max_memory_size_kbytes": {
      "soft": "unlimited",
      "hard": "unlimited"
    },
    "open_files": {
      "soft": 1048576,
      "hard": 1048576
    },
    "stack_size_bytes": {
      "soft": 8388608,
      "hard": "unlimited"
    },
    "cpu_time_seconds": {
      "soft": "unlimited",
      "hard": "unlimited"
    },
    "max_user_processes": {
      "soft": "unlimited",
      "hard": "unlimited"
    },
    "virtual_memory_kbytes": {
      "soft": "unlimited",
      "hard": "unlimited"
    }
  },
  "sharedObjects": [
    "linux-vdso.so.1",
    "/lib/x86_64-linux-gnu/libdl.so.2",
    "/usr/lib/x86_64-linux-gnu/libstdc++.so.6",
    "/lib/x86_64-linux-gnu/libm.so.6",
    "/lib/x86_64-linux-gnu/libgcc_s.so.1",
    "/lib/x86_64-linux-gnu/libpthread.so.0",
    "/lib/x86_64-linux-gnu/libc.so.6",
    "/lib64/ld-linux-x86-64.so.2"
  ]
}